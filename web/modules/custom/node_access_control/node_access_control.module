<?php

/**
 * @file
 * Primary module hooks for Node Access Control module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_node_access().
 */
function node_access_control_node_access(Node $node, $op, AccountInterface $account) {
  if ($node->getType() === 'company_finances' && in_array($op, ["view", "update"])) {
    $permitted_users = $node->hasField('field_user_access') ? $node->get('field_user_access')->getValue() : [];
    $permitted_users_id = $permitted_users ? array_column($permitted_users, 'target_id') : [];
    if (!in_array($account->id(), $permitted_users_id) && !$account->hasPermission('administer node access control')) {
      return AccessResult::forbidden();
    }
    return AccessResult::allowed();
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_form_alter().
 */
function node_access_control_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ["node_company_finances_form", "node_company_finances_edit_form"])) {
    if (!\Drupal::currentUser()->hasPermission('administer node access control')) {
      if (isset($form['field_user_access'])) {
        $form['field_user_access']['#access'] = FALSE;
      }
    }
  }
}
